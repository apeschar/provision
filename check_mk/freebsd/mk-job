#!/usr/local/bin/bash
# mk-job: runs monitored jobs on Linux
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

export MK_VARDIR=/var/lib/check_mk_agent

help() {
    echo "Usage: mk-job IDENT PROGRAM [ARGS...]"
    echo ""
    echo "Execute PROGRAM as subprocess while measuring performance information"
    echo "about the running process and writing it to an output file. This file"
    echo "can be monitored using Check_MK. The Check_MK Agent will forward the"
    echo "information of all job files to the monitoring server."
    echo ""
    echo "This file is being distributed with the Check_MK Agent."
}

if [ $# -lt 2 ]; then
    help >&2
    exit 1
fi

MYSELF=$(id -nu)
OUTPUT_PATH=$MK_VARDIR/job/$MYSELF
IDENT=$1
shift

if [ ! -d "$OUTPUT_PATH" ]; then
    if [ "$MYSELF" = root ] ; then
        mkdir -p "$OUTPUT_PATH"
    else
        echo "ERROR: Missing output directory $OUTPUT_PATH for non-root user '$MYSELF'." >&2
        exit 1
    fi
fi

if ! type $1 >/dev/null 2>&1; then
    echo -e "ERROR: Cannot run $1. Command not found.\n" >&2
    help >&2
    exit 1
fi

date +"start_time %s" > "$OUTPUT_PATH/$IDENT.running" 2>/dev/null

if [ ! -w "$OUTPUT_PATH/$IDENT.running" ] ; then
  # Looks like we are lacking the permissions to create this file..
  # In this scenario no mk-job status file is created. We simply execute the command
  exec "$@"
fi


/usr/bin/time -o "$OUTPUT_PATH/$IDENT.$$" -l "$@"
RC=$?

awk '
    BEGIN {
	print "exit_code '$RC'"
    }
    NR==1 {
        print "real_time " $1
        print "user_time " $3
        print "system_time " $5
    }
    / block input operations/ { print "reads " $1 }
    / block output operations/ { print "writes " $1 }
    / maximum resident set size/ { print "max_res_kbytes " $1 }
    / average shared memory size/ { print "avg_mem_bkytes " $1 }
    / involuntary context switches/ { print "invol_context_switches " $1 }
    / voluntary context switches/ { print "vol_context_switches " $1 }
' < "$OUTPUT_PATH/$IDENT.$$" >> "$OUTPUT_PATH/$IDENT.running"

rm "$OUTPUT_PATH/$IDENT.$$"
mv "$OUTPUT_PATH/$IDENT.running" "$OUTPUT_PATH/$IDENT"

exit $RC
